<div class="wrapper">
  <running-row style="rotate:0.13rad;filter:none"></running-row>
  <running-row style="rotate:-0.05rad"></running-row>
</div>

<script>
  const ELEMENT_SIZE = 70;
  const ANIMATION = [
    {
      transform: "translateX(0)",
    },
    {
      transform: "translateX(-100%)",
    },
  ];
  const ANIMATION_OPTIONS = {
    duration: 2000,
    iterations: Infinity,
  };

  class RunningRow extends HTMLElement {
    private getElementsAmount() {
      return Math.max(10, Math.floor(window.innerWidth / ELEMENT_SIZE));
    }
    private resetAnimation(elements: HTMLDivElement[]) {
      for (let i = 0; i < elements.length; i++) {
        elements[i].animate(ANIMATION, ANIMATION_OPTIONS);
      }
    }

    private createDiv() {
      const div = document.createElement("div");
      div.style.fontWeight = "700";
      div.style.fontSize = "1.7rem";
      div.style.color = "white";
      div.style.padding = "0px 1rem";
      div.style.whiteSpace = "nowrap";
      div.style.fontFamily = "Montserrat";
      div.style.lineHeight = "150%";
      div.innerText = "CERTIFICATES";
      return div;
    }

    private handleResize() {
      const oldAmount = this.children.length;
      const newAmount = this.getElementsAmount();
      if (oldAmount < newAmount) {
        const div = this.createDiv();
        this.elements.push(div);
        this.append(div);
        this.resetAnimation(this.elements);
      }
      if (oldAmount > newAmount) {
        this.removeChild(this.elements.pop());
      }
    }

    private elements: HTMLDivElement[];

    constructor() {
      super();
      this.elements = [...Array(this.getElementsAmount())].map(() => {
        const div = this.createDiv();
        this.append(div);
        div.animate(ANIMATION, { duration: 2000, iterations: Infinity });
        return div;
      });
      window.addEventListener("resize", this.handleResize.bind(this));
    }
  }

  customElements.define("running-row", RunningRow);
</script>

<style>
  running-row {
    display: flex;
    position: absolute;
    padding: 5px 0;
    width: calc(100vw + 60%);
    transform: translateX(-10%);
    background-color: black;
    overflow: hidden;
    filter: drop-shadow(0 10px 10px rgb(0 0 0 / 0.3));
  }
  .wrapper {
    transform: translateY(-20px);
    height: 10rem;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: start;
  }
</style>
