---
import Section from "./Section.astro";
import darkPointer from "~/assets/darkpointer.svg";
import pointer from "~/assets/pointer.svg";

export type Props = {
  title: string;
  isDark?: boolean;
  id?: string;
};
const { title, isDark, id } = Astro.props;
---

<Section isDark={isDark}>
  <pointer-seperation
    id={id}
    class={`container${isDark ? " dark-container" : ""}`}
  >
    <h2 class={`${isDark ? "dark-span" : ""}`}>{title}</h2>
    <div class="pointer">
      <img
        height={isDark ? darkPointer.height : pointer.height}
        width={isDark ? darkPointer.width : pointer.width}
        src={isDark ? darkPointer.src : pointer.src}
        alt=""
      />
      <div class={`line${isDark ? " dark-line" : ""}`}></div>
    </div>
  </pointer-seperation>
</Section>

<script>
  class Arrow extends HTMLElement {
    private observer: IntersectionObserver;
    private async onObserve(entries: IntersectionObserverEntry[]) {
      console.log("hi from onObserve");
      const entry = entries[0];
      let target = this.querySelector(".pointer") as HTMLDivElement;
      if (entry.isIntersecting) {
        console.log("add class");
        target.classList.add("active");
        this.observer.disconnect();
      }
    }
    constructor() {
      super();
      this.observer = new IntersectionObserver(this.onObserve.bind(this), {
        threshold: 0.1,
      });
      this.observer.observe(this);
    }
  }
  customElements.define("pointer-seperation", Arrow);
</script>

<style>
  .container {
    width: 100%;
    padding: 2rem 0;
    display: flex;
    gap: 2rem;
    align-items: center;
  }
  .dark-container {
    background-color: black;
  }
  h2 {
    text-transform: uppercase;
    white-space: nowrap;
  }
  .dark-span {
    color: white;
    background-color: black;
  }
  .pointer {
    position: relative;
    display: flex;
    align-items: center;
    translate: 100%;
    flex: 1;
    transition: translate 1.3s ease-in-out;
  }
  .active {
    translate: 0%;
  }
  img {
    position: absolute;
    left: -20px;
  }
  .line {
    height: 5px;
    background-color: black;
    border-radius: 99999px;
    width: 100vw;
  }
  .dark-line {
    background-color: white;
  }
  @media (max-width: 768px) {
    img {
      scale: 0.5;
    }
    .container {
      padding: 0;
    }
  }
</style>
